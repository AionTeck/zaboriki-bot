import requests
import logging
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import CallbackContext
from config import config

logger = logging.getLogger(__name__)


async def error_handler(update: Update, context: CallbackContext):
    logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {context.error}")


async def start(update: Update, context: CallbackContext) -> int:
    user_name = update.message.from_user.first_name

    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}!\n\n"
        "–ú—ã –∏–∑–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º, –ø—Ä–æ–¥–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–±–æ—Ä—ã\n"
        "–Ø –º–æ–≥—É –±—ã—Å—Ç—Ä–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã—Ö –æ–≥—Ä–∞–∂–¥–µ–Ω–∏–π.\n"
        "–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ª—é–±–æ–π –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç."
    )

    keyboard = [
        [KeyboardButton("üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.",
        reply_markup=reply_markup,
    )

    return 0


async def handle_contact(update: Update, context: CallbackContext):
    contact = update.message.contact
    user_name = update.message.from_user.first_name
    phone_number = contact.phone_number
    user_id = update.message.from_user.id

    post_data = {
        'name': user_name,
        'phoneNumber': phone_number,
        'telegramId': user_id,
    }

    try:
        response = requests.post(f"{config.BASE_API_URL}clients", json=post_data)
        response.raise_for_status()

        await update.message.reply_text(f"–°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ {phone_number} –±—ã–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")

        await show_main_menu(update, context)
    except requests.exceptions.HTTPError as http_err:
        logger.error(f"HTTP error occurred: {http_err}")
        await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ –Ω–æ–º–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as err:
        logger.error(f"Unexpected error occurred: {err}")
        await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


async def show_main_menu(update: Update, context: CallbackContext):
    keyboard = [
        [KeyboardButton('–†–∞—Å—á–µ—Ç'), KeyboardButton('–û –∫–æ–º–ø–∞–Ω–∏–∏')],
        [KeyboardButton('–ó–∞—è–≤–∫–∞'), KeyboardButton('–¶–µ–Ω—ã')]
    ]

    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ",
        reply_markup=reply_markup
    )
